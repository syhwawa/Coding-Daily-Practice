Given an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:
Input:nums = [1,1,1], k = 2
Output: 2
Note:
The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].

Solution:

class Solution:
    def subarraySum(self, nums: List[int], k: int) -> int:
        count = 0
        sum1 = 0
        hash = {0:1}
        for i in range(len(nums)):
            sum1 += nums[i]
            if sum1 - k in hash:
                count += hash[sum1-k]
            if sum1 in hash:
                hash[sum1] += 1
            else:
                hash[sum1] = 1
        return count
        
