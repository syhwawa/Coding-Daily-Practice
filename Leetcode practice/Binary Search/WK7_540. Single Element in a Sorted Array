You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

Example 1:

Input: [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:

Input: [3,3,7,7,10,11,11]
Output: 10

class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        a = 0
        for i in nums:
            a ^=i
            
        return a


class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        l , r = 0, len(nums)-1
        while l < r:
            mid = (r-l)//2 +l
            if mid % 2 ==1:
                mid -= 1
            if nums[mid] == nums[mid+1]:
                l = mid + 2
            else:
                r = mid
        return nums[l]
        
        

